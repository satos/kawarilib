------------------------------------------------------------------------------

  μAIMS(KIS)
  AIMS-1/2/3のKISによる再実装

      Ruby版 Programed by NAKAUE.T (Meister)
      KIS版  Programed by Sato.S (さとー)

   2003.06.09  Version 0.1.0  μAIMS(Ruby) Ver. 0.1.0から移植
   2003.08.08                 データ構造を見直し、deldbメソッド追加
   2003.08.13                 query_propertyメソッド、query_sdメソッド追加
   2003.08.15  Version 0.2.0  逆引き辞書追加、query_rdメソッド追加
                              query_rメソッド追加、query_dメソッド追加

  このソフトウェアはPublic Domain Softwareです。
  自由に利用・改変して構いません。
  改変の有無にかかわらず、自由に再配布することが出来ます。
  作者はこのソフトウェアに関して、全ての権利と全ての義務を放棄します。

  このライブラリで使用している三項データベースの詳細は、以下を参照下さい。
  http://www.rogiken.org/aims/pdf/AIMS-1-3.pdf

------------------------------------------------------------------------------
  データ構造

  MicroAIMS.db.(DB)                      : "MicroAIMS"
  MicroAIMS.db.(DB).Value                : 全てのsの集合
  MicroAIMS.db.(DB).Tree.(s_ID)          : s_IDに対応するsの内容
  MicroAIMS.db.(DB).Value.(s_ID)         : s_IDのsが持つ全てのrの集合
  MicroAIMS.db.(DB).Tree.(s_ID).(r_ID)   : r_IDに対応するrの内容
  MicroAIMS.db.(DB).Value.(s_ID).(r_ID)  : 「sのrはd」に該当するdの集合
  MicroAIMS.db.(DB).RValue               : 全てのdの集合
  MicroAIMS.db.(DB).RTree.(d_ID)         : d_IDに対応するdの内容
  MicroAIMS.db.(DB).RValue.(d_ID)        : d_IDのdが持つ全てのrの集合
  MicroAIMS.db.(DB).RTree.(d_ID).(r_ID)  : r_IDに対応するrの内容
  MicroAIMS.db.(DB).RValue.(d_ID).(r_ID) : 「sのrはs」に該当するsの集合

    *1 (DB)はデータベースの名前
    *2 (s_ID)、(r_ID)、(d_ID)は非負整数

------------------------------------------------------------------------------

関数     : MicroAIMS
機能     : DBの宣言
第1引数  : DB名
第2引数  : コピー元DB名(省略可能)
戻り値   : 無し


メソッド : save
機能     : DBの保存
第1引数  : DBを保存するファイル名
戻り値   : 無し


メソッド : adddb
機能     : データベースへの追加
第1引数  : S
第2引数  : R
第3引数  : D
戻り値   : 無し


メソッド : deldb
機能     : データベースから削除
第1引数  : S
第2引数  : R
第3引数  : D(省略可能、省略した場合はS、Rに該当する全てのDを削除)
戻り値   : 無し


メソッド : query_srd
機能     : SのRはDか？
第1引数  : S
第2引数  : R
第3引数  : D
戻り値   : 該当ありの場合true、無しの場合false


メソッド : query_s
機能     : Sについての知識を列挙
第1引数  : 出力先エントリのルート名
第2引数  : S
戻り値   : 該当ありの場合、ツリーの大きさ


メソッド : query_r
機能     : Rについての知識を列挙
第1引数  : 出力先エントリのルート名
第2引数  : R
戻り値   : 該当ありの場合、ツリーの大きさ


メソッド : query_d
機能     : Dについての知識を列挙
第1引数  : 出力先エントリのルート名
第2引数  : D
戻り値   : 該当ありの場合、ツリーの大きさ


メソッド : query_sr
機能     : SのRは何？
第1引数  : 出力先エントリ名
第2引数  : S
第3引数  : R
戻り値   : 該当ありの場合、値の個数


メソッド : query_sd
機能     : Sの何がD？
第1引数  : 出力先エントリ名
第2引数  : S
第3引数  : D
戻り値   : 該当ありの場合、値の個数


メソッド : query_rd
機能     : 何のRはD？
第1引数  : 出力先エントリ名
第2引数  : R
第3引数  : D
戻り値   : 該当ありの場合、値の個数


メソッド : query_property
機能     : Sの持っているRを列挙
第1引数  : 出力先エントリ名
第2引数  : S
戻り値   : 該当ありの場合、値の個数


メソッド : query_class
機能     : Sの種類(一種)は何？
第1引数  : 出力先エントリ名
第2引数  : S
第3引数  : R(省略可能、省略した場合はR=「種類」と仮定する)
戻り値   : 該当ありの場合、事例の個数


メソッド : deduce_sr
機能     : SのRは何？(推論付き)
第1引数  : 出力先エントリ名
第2引数  : S
第3引数  : R
戻り値   : 該当ありの場合、値の個数
